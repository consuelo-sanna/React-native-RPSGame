{"version":3,"sources":["src/components/PlayScreen.js","App.js","web-build/register-service-worker.js","src/images/signs/rock.png","src/images/signs/paper.png","src/images/signs/scissors.png"],"names":["rock","require","paper","scissors","bgColors","randomImg","emojis","Math","floor","random","length","styles","StyleSheet","create","container","flex","alignItems","justifyContent","counter","fontSize","color","sign","width","height","button","position","bottom","PlayScreen","useState","setCounter","useEffect","timer","setTimeout","clearTimeout","View","style","compose","backgroundColor","Image","source","Button","onPress","title","Text","App","isPlay","setIsPlay","header","StatusBar","marginBottom","marginTop","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","module","exports"],"mappings":"yMAGMA,EAAOC,EAAQ,IACfC,EAAQD,EAAQ,IAChBE,EAAWF,EAAQ,IAEnBG,EAAW,CAAC,UAAW,UAAW,WAElCC,EAAY,WAChB,IAAMC,EAAS,CAACN,EAAKE,EAAMC,GAE3B,OAAOG,EADQC,KAAKC,MAAOD,KAAKE,SAASH,EAAOI,UAyC5CC,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,WAAY,SACZC,eAAgB,UAElBC,QAAS,CACPC,SAAU,IACVC,MAAO,SAETC,KAAM,CACJC,MAAO,IACPC,OAAQ,KAEVC,OAAQ,CACNC,SAAU,WACVC,OAAQ,MAIGC,EAzDI,WAAO,IAAD,EACOC,mBAAS,GADhB,WAChBV,EADgB,KACPW,EADO,KAcvB,OAXAC,qBAAU,WACN,GAAe,IAAZZ,EAAH,CACA,IAAMa,EAAQC,YAAW,WACrBH,EAAWX,EAAU,KACvB,KAEF,OAAO,kBAAMe,aAAaF,OAE5B,CAACb,IAID,kBAACgB,EAAA,EAAD,CAAMC,MAAOvB,IAAWwB,QACtB,CAAEC,gBAAiBjC,EAASc,EAAU,IACtCP,EAAOG,YAEO,IAAZI,EAEE,oCACE,kBAACoB,EAAA,EAAD,CAAOC,OAAQlC,IAAa8B,MAAOxB,EAAOU,OAC1C,kBAACa,EAAA,EAAD,CAAMC,MAAOxB,EAAOa,QAClB,kBAACgB,EAAA,EAAD,CAASC,QAAS,kBAAMZ,EAAW,IAAIa,MAAM,WAI7C,kBAACC,EAAA,EAAD,CAAMR,MAAOxB,EAAOO,SAApB,IAA+BA,EAA/B,OCtCC,SAAS0B,IAAO,IAAD,EACDhB,oBAAS,GADR,WACrBiB,EADqB,KACdC,EADc,KAE5B,OAASD,EACH,kBAAC,EAAD,MACA,kBAACX,EAAA,EAAD,CAAMC,MAAOxB,EAAOG,WAClB,kBAAC6B,EAAA,EAAD,CAAMR,MAAOxB,EAAOoC,QAApB,uBACA,kBAACJ,EAAA,EAAD,CAAMR,MAAO,CAAChB,SAAS,KAAvB,+BACA,kBAACe,EAAA,EAAD,CAAMC,MAAOxB,EAAOa,QAClB,kBAACgB,EAAA,EAAD,CAAQL,MAAOxB,EAAOoC,OAAQN,QAAS,kBAAMK,GAAWD,IAASH,MAAM,UAEzE,kBAACM,EAAA,EAAD,CAAWb,MAAM,UAO3B,IAAMxB,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNsB,gBAAiB,OACjBrB,WAAY,SACZC,eAAgB,UAElB8B,OAAQ,CACN5B,SAAU,GACV8B,aAAc,IAEhBzB,OAAQ,CACN0B,UAAW,O,2DChCX,kBAAmBC,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CC,MAAK,SAAUC,OAGfC,OAAM,SAAUC,GACfC,QAAQH,KAAK,oCAAqCE,U,mBCV1DE,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,uC","file":"static/js/app.924dcaad.chunk.js","sourcesContent":["import React,{useState, useEffect } from 'react';\nimport { StyleSheet, Text, View ,Button,Image } from 'react-native'\n\nconst rock = require('../images/signs/rock.png')\nconst paper = require('../images/signs/paper.png')\nconst scissors = require('../images/signs/scissors.png')\n\nconst bgColors = ['#1abc9c', '#3498db', '#9b59b6'];\n\nconst randomImg = () => {\n  const emojis = [rock,paper,scissors];\n  const random = Math.floor((Math.random()*emojis.length));\n  return emojis[random]\n}\n\nconst PlayScreen = () => {\n  const [counter, setCounter] = useState(3);\n\n  useEffect(()=> {\n      if(counter === 0) return;\n      const timer = setTimeout(()=>{\n          setCounter(counter - 1)\n      },500)\n\n      return () => clearTimeout(timer)\n\n  },[counter])\n\n\n  return (\n    <View style={StyleSheet.compose(\n      { backgroundColor: bgColors[counter - 1]},\n      styles.container)}\n    >\n      {(counter === 0) ?\n        (\n          <>\n            <Image source={randomImg()} style={styles.sign} />\n            <View style={styles.button}>\n              <Button  onPress={() => setCounter(3)} title=\"Play\" />\n            </View>\n          </>\n        ) : (\n              <Text style={styles.counter}> {counter} </Text>\n        )\n      }\n        \n        \n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  counter: {\n    fontSize: 150,\n    color: 'white',\n  },\n  sign: {\n    width: 300,\n    height: 300,\n  },\n  button: {\n    position: \"absolute\",\n    bottom: 40\n  }\n});\n\nexport default PlayScreen;","import { StatusBar } from 'expo-status-bar';\nimport React, {useState} from 'react';\nimport { StyleSheet, Text, View ,Button} from 'react-native';\nimport PlayScreen from './src/components/PlayScreen'\n\nexport default function App() {\n  const [isPlay,setIsPlay] = useState(false);\n  return ( isPlay ?\n        <PlayScreen /> :\n        <View style={styles.container}>\n          <Text style={styles.header}>Rock Paper Scissors</Text>\n          <Text style={{fontSize:65}}>✊ ✋ ✌️ </Text>\n          <View style={styles.button}>\n            <Button style={styles.header} onPress={() => setIsPlay(!isPlay)} title=\"Play\" /> \n          </View>\n          <StatusBar style=\"auto\" />\n        </View>\n\n   \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header: {\n    fontSize: 30,\n    marginBottom: 10,\n  },\n  button: {\n    marginTop: 30,\n  }\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/rock.79436ec1.png\";","module.exports = __webpack_public_path__ + \"static/media/paper.599c25df.png\";","module.exports = __webpack_public_path__ + \"static/media/scissors.f27b7752.png\";"],"sourceRoot":""}